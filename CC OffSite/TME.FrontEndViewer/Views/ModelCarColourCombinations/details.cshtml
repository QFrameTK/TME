@model IReadOnlyList<TME.CarConfigurator.Interfaces.Colours.ICarColourCombination>
<div class="object" data-id="SortCompare">
    <div class="title">
        <strong>Sort Compare</strong>
    </div>
    <div class="content">
        <p class="property" data-id="ExteriorColourSortOrder">Exterior Colours : @String.Join(", " , Model.Select(x=> x.ExteriorColour).OrderBy(x=>x.SortIndex).Select(x=>x.InternalCode).Distinct()) </p>
        <p class="property" data-id="UpholsterySortOrder">Upholsteries : @String.Join(", " , Model.Select(x=> x.Upholstery).OrderBy(x=>x.SortIndex).Select(x=>x.InternalCode).Distinct()) </p>
    </div>
</div>

@foreach (var model in Model)
{
    <div class="object" data-id="@Html.Raw(String.Format("{0} - {1}", model.ExteriorColour.InternalCode, model.Upholstery.InternalCode))">
        <div class="title">
            <strong>@Html.Raw(String.Format("{0} - {1}", model.ExteriorColour.Name, model.Upholstery.Name))</strong>
        </div>
        <div class="content">
            <p class="property allow-mismatch" data-id="ID">ID : @Html.Raw(model.ID)</p>
            <p class="property allow-mismatch" data-id="SortIndex">SortIndex : @Html.Raw(model.SortIndex)</p>
            <div class="object sub-item" data-id="@Html.Raw(model.ExteriorColour.ID)">
                <div class="title">
                    <strong>Exterior Colour</strong>
                </div>
                <div class="content">
                    @Html.Partial("Colours/_exteriorColour", model.ExteriorColour)
                    <p class="property" data-id="PriceExVat">PriceExVat : @Html.Raw(model.ExteriorColour.Price.PriceExVat)</p>
                    <p class="property" data-id="PriceInVat">PriceInVat : @Html.Raw(model.ExteriorColour.Price.PriceInVat)</p>
                </div>
            </div>
            <div class="object sub-item" data-id="@Html.Raw(model.Upholstery.ID)">
                <div class="title">
                    <strong>Upholstery</strong>
                </div>
                <div class="content">
                    @Html.Partial("Colours/_upholstery", model.Upholstery)
                    <p class="property" data-id="PriceExVat">PriceExVat : @Html.Raw(model.ExteriorColour.Price.PriceExVat)</p>
                    <p class="property" data-id="PriceInVat">PriceInVat : @Html.Raw(model.ExteriorColour.Price.PriceInVat)</p>
                </div>
            </div>

            @*@Html.ActionLink("Exterior Colour Assets", "Index", "ModelExteriorColourAssets", new { modelID = ViewBag.ModelID, exteriorColourID = model.ExteriorColour.ID, carID =  ViewBag.CarID }, new { })
            @foreach (var visibleInModeAndView in model.ExteriorColour.VisibleIn.Where(x => x.Assets.Any()))
            {
                @Html.Raw(" | ")
                @Html.ActionLink(String.Format("Exterior Colour Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View), "Index", "ModelExteriorColourVisibleInAssets", new { modelID = ViewBag.ModelID, exteriorColourID = model.ExteriorColour.ID, carID =  ViewBag.CarID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View }, new { })
            } <br/>*@
            

            @*@Html.ActionLink("Upholstery Assets", "Index", "ModelUpholsteryAssets", new { modelID = ViewBag.ModelID, upholsteryID = model.Upholstery.ID, carID =  ViewBag.CarID }, new { })
            @foreach (var visibleInModeAndView in model.Upholstery.VisibleIn.Where(x => x.Assets.Any()))
            {
                @Html.Raw(" | ")
                @Html.ActionLink(String.Format("Upholstery Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View), "Index", "ModelUpholsteryVisibleInAssets", new { modelID = ViewBag.ModelID, upholsteryID = model.Upholstery.ID, carID =  ViewBag.CarID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View }, new { })
            } <br/>*@
            
                      
           @* @Html.ActionLink("Colour Combination Assets", "Index", "ModelColourCombinationAssets", new { modelID = ViewBag.ModelID, exteriorColourID = model.ExteriorColour.ID, upholsteryID = model.Upholstery.ID, carID =  ViewBag.CarID }, new { })
            @foreach (var visibleInModeAndView in model.VisibleIn.Where(x => x.Assets.Any()))
            {
                @Html.Raw(" | ")
                @Html.ActionLink(String.Format("Colour Combination Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View), "Index", "ModelColourCombinationVisibleInAssets", new { modelID = ViewBag.ModelID, exteriorColourID = model.ExteriorColour.ID, upholsteryID = model.Upholstery.ID , carID =  ViewBag.CarID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View }, new { })
            } <br/>*@

        </div>
    </div>
}