@model TME.CarConfigurator.Interfaces.Packs.ICarPackEquipment
@if (Model.Accessories.Any()) {
    <h3>Accessories</h3>
    <div>
        @foreach (var model in Model.Accessories)
        {
            <div class="object" data-id="@(model.ID)">
                <div class="title">
                    <strong>@Html.Raw(model.Name)</strong>
                </div>
                <div class="content">
                    @Html.Partial("Equipment/_carPackEquipmentItem", model)
                    <p class="property" data-id="actionlinks">
                        @Html.ActionLink("Rules", "Index", "ModelCarEquipmentRules", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID,  packID = ViewBag.PackID, equipmentID = model.ID }, new { }) | 
                        @Html.ActionLink("Assets", "Index", "ModelCarEquipmentAssets", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID }, new { })
                        @foreach (var visibleInModeAndView in model.VisibleIn.Where(x => x.Assets.Any()).OrderBy(x => x.View).ThenBy(x => x.Mode))
                        {
                            @Html.Raw(" | ")
                            @Html.ActionLink(String.Format("Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View), "Index", "ModelCarEquipmentVisibleInAssets", new {modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View}, new {})
                        }
                    </p>
                </div>
            </div>
        }
    </div>
}
@if (Model.Options.Any())
{
    <h3>Options</h3>
    <div>
        @foreach (var model in Model.Options)
        {
            <div class="object" data-id="@(model.ID)">
                <div class="title">
                    <strong>@Html.Raw(model.Name)</strong>
                </div>
                <div class="content">
                    @Html.Partial("Equipment/_carPackEquipmentItem", model)
                    <p class="property allow-mismatch" data-id="TechnologyItem">TechnologyItem : @Html.Raw(model.TechnologyItem)</p>
                    @* <p class="property" data-id="SuffixOption">SuffixOption : @Html.Raw(model.SuffixOption)</p>
                    <p class="property" data-id="PostProductionOption">PostProductionOption : @Html.Raw(model.PostProductionOption)</p>*@
                    @if (model.ParentOption != null)
                    {
                        <p class="property" data-id="ParentOptionShortID">ParentOption.ShortID : @Html.Raw(model.ParentOption.ShortID)</p>
                        <p class="property" data-id="ParentOptionName">ParentOption.Name : @Html.Raw(model.ParentOption.Name)</p>
                    }
                    <p class="property" data-id="actionlinks">
                        @Html.ActionLink("Rules", "Index", "ModelCarEquipmentRules", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID,  packID = ViewBag.PackID, equipmentID = model.ID }, new { }) |                         
                        @Html.ActionLink("Assets", "Index", "ModelCarEquipmentAssets", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID }, new { })
                        @foreach (var visibleInModeAndView in model.VisibleIn.Where(x => x.Assets.Any()).OrderBy(x => x.View).ThenBy(x => x.Mode))
                        {
                            @Html.Raw(" | ")
                            @Html.ActionLink(String.Format("Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View), "Index", "ModelCarEquipmentVisibleInAssets", new {modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View}, new {})
                        }
                    </p>
                </div>
            </div>
        }
    </div>
}
@if (Model.ExteriorColourTypes.Any()) {
    <h3>Exterior Colour Types</h3>
    <div>
        @foreach (var model in Model.ExteriorColourTypes)
        {
            <div class="object" data-id="@(model.ID)">
                <div class="title">
                    <strong>@Html.Raw(model.Name)</strong>
                </div>
                <div class="content">
                    @Html.Partial("Equipment/_carPackEquipmentItem", model)
                    <p class="property" data-id="ColourCombinations">Colour Combinations : @String.Join(", " , model.ColourCombinations.Select(x=> string.Format("{0}-{1}", x.ExteriorColour.InternalCode, x.Upholstery.InternalCode)).Distinct()) </p>
                    <p class="property" data-id="actionlinks">
                        @Html.ActionLink("Rules", "Index", "ModelCarEquipmentRules", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID,  packID = ViewBag.PackID, equipmentID = model.ID }, new { }) |                         
                        @Html.ActionLink("Assets", "Index", "ModelCarEquipmentAssets", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID }, new { })
                        @foreach (var visibleInModeAndView in model.VisibleIn.Where(x => x.Assets.Any()).OrderBy(x => x.View).ThenBy(x => x.Mode))
                        {
                            @Html.Raw(" | ")
                            @Html.ActionLink(String.Format("Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View), "Index", "ModelCarEquipmentVisibleInAssets", new {modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View}, new {})
                        }
                    </p>
                </div>
            </div>
        }
    </div>
}
@if (Model.UpholsteryTypes.Any()) {
    <h3>Upholstery Types</h3>
    <div>
        @foreach (var model in Model.UpholsteryTypes)
        {
            <div class="object" data-id="@(model.ID)">
                <div class="title">
                    <strong>@Html.Raw(model.Name)</strong>
                </div>
                <div class="content">
                    @Html.Partial("Equipment/_carPackEquipmentItem", model)
                    <p class="property" data-id="ColourCombinations">Colour Combinations : @String.Join(", " , model.ColourCombinations.Select(x=> string.Format("{0}-{1}", x.ExteriorColour.InternalCode, x.Upholstery.InternalCode)).Distinct()) </p>
                    <p class="property" data-id="actionlinks">
                        @Html.ActionLink("Rules", "Index", "ModelCarEquipmentRules", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID,  packID = ViewBag.PackID, equipmentID = model.ID }, new { }) |                         
                        @Html.ActionLink("Assets", "Index", "ModelCarEquipmentAssets", new { modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID }, new { })
                        @foreach (var visibleInModeAndView in model.VisibleIn.Where(x => x.Assets.Any()).OrderBy(x => x.View).ThenBy(x => x.Mode))
                        {
                            @Html.Raw(" | ")
                            @Html.ActionLink(String.Format("Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View), "Index", "ModelCarEquipmentVisibleInAssets", new {modelID = ViewBag.ModelID, carID = ViewBag.CarID, packID = ViewBag.PackID, equipmentID = model.ID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View}, new {})
                        }
                    </p>
                </div>
            </div>
        }
    </div>
}