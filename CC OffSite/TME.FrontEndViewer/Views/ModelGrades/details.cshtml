@using TME.FrontEndViewer.Models
@model IEnumerable<TME.CarConfigurator.Interfaces.IGrade>


@foreach (var model in Model)
{
    <div class="object" data-id="@Html.Raw(model.ID)">
        <div class="title">
            <strong>@Html.Raw(model.Name)</strong>
        </div>
        <div class="content">
            @Html.Partial("_baseObject", model)
            <p class="property" data-id="Special">Brochure : @Html.Raw(model.Special)</p>
            <p class="property" data-id="StartingPrice.PriceExVat">StartingPrice.PriceExVat : @Html.Raw(model.StartingPrice.PriceExVat)</p>
            <p class="property" data-id="StartingPrice.PriceInVat">StartingPrice.PriceInVat : @Html.Raw(model.StartingPrice.PriceInVat)</p>
            <p class="property" data-id="BasedUponID">BasedUponID : @Html.Raw(model.BasedUpon == null ? Guid.Empty : model.BasedUpon.ID)</p>
            <br />
            @Html.ActionLink("Assets", "Index", "ModelGradeAssets", new { modelID = ViewBag.ModelID, gradeID = model.ID }, new { }) |
            @foreach (var visibleInModeAndView in model.VisibleIn.Where(x => x.Assets.Any()))
            {
                @Html.Raw(" | ")
                @Html.ActionLink(String.Format("Assets ({0}-{1})", visibleInModeAndView.Mode, visibleInModeAndView.View),"Index", "ModelGradeVisibleInAssets", new { modelID = ViewBag.ModelID, gradeID = model.ID, mode = visibleInModeAndView.Mode, view = visibleInModeAndView.View}, new { })         
            }
            @Html.ActionLink("Equipment", "Index", "ModelGradeEquipment", new { modelID = ViewBag.ModelID, gradeID = model.ID, subModelID = ViewBag.SubModelID }, new { }) |
            @Html.ActionLink("Packs", "Index", "ModelGradePacks", new { modelID = ViewBag.ModelID, gradeID = model.ID , subModelID = ViewBag.SubModelID}, new { }) 
        </div>
    </div>
}